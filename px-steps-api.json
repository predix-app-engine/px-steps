{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\n    <px-steps items='[{ id: \"1\", label: \"Select Services\"},{ id: \"2\", label: \"Billing\"}]'></px-steps>\n\n### Styling\n\nThe following custom properties are available for styling (shown with their corresponding default values):\n\nCustom property | Description\n:----------------|:-------------\n`--px-steps-connector-color` | Color for the connecting lines / bubbles\n`--px-steps-text-color` | Default text color for uncompleted and inactive steps\n`--px-steps-text-color--hover` | Text color for steps when hovered\n`--px-steps-text-color--pressed` | Text color for steps when pressed\n`--px-steps-text-color--current` | Text color for the current highlighted step\n`--px-steps-text-color--completed` | Text color for the completed steps\n`--px-steps-min-width` | Minimum width of each step in the stepper",
      "summary": "",
      "path": "px-steps.html",
      "properties": [
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "An array of steps and their details. If empty, the component is not rendered.\nThe structure should be:\n\n     [{ id: String, label: String }, ... ]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "completed",
          "type": "Array | null | undefined",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be marked as completed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 8
            },
            "end": {
              "line": 89,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "restricted",
          "type": "Array | null | undefined",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be restricted from navigation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "currentStep",
          "type": "number | null | undefined",
          "description": "The array index of the currently active step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        }
      ],
      "methods": [
        {
          "name": "complete",
          "description": "Sets the current step, or specified step, to complete and advances to the next step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "incomplete",
          "description": "Sets the current step, or specified step, to incomplete.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "restrict",
          "description": "Restricts the step at the provided index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "allow",
          "description": "Removes restriction on step at provided index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "next",
          "description": "Go forward one step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "previous",
          "description": "Go back one step.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "jumpToStep",
          "description": "Jump to an arbitrary step by index.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getIcon",
          "description": "Calculates which icon to display for a given node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "completed"
            }
          ]
        },
        {
          "name": "_getStepState",
          "description": "Calculates which class to assign to a given node.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 248,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "index"
            },
            {
              "name": "currentStep"
            },
            {
              "name": "completed"
            },
            {
              "name": "restricted"
            }
          ]
        },
        {
          "name": "_handleTap",
          "description": "Fires an event when a node is tapped upon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 64,
          "column": 12
        },
        "end": {
          "line": 267,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "items",
          "description": "An array of steps and their details. If empty, the component is not rendered.\nThe structure should be:\n\n     [{ id: String, label: String }, ... ]",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "completed",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be marked as completed.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 8
            },
            "end": {
              "line": 89,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "restricted",
          "description": "An array of IDs corresponding to items in the steps array which\nshould be restricted from navigation.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 99,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "current-step",
          "description": "The array index of the currently active step.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-steps-tapped",
          "description": "Event fired when a step in the px-steps is tapped.\nEvent.detail will contain the id of the step, e.g.\n\n     { id : \"3\" }\nYou should intercept this event, perform any necessary\nvalidation or saving on the current step in the process,\ndecide if the user is allowed to navigate to that step,\nand then use the `jumpToStep` method to actually change steps.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-steps"
    }
  ]
}
